# O(m*n) / O(m*n)
class Solution:
    def islandPerimeter(self, grid: List[List[int]]) -> int:
        
        m, n = len(grid), len(grid[0])
        
        for i in range(m):
            for j in range(n):
                if grid[i][j] == 1:
                    return self.dfs(grid, i, j, m, n)
                
    def dfs(self, grid, i, j, m, n):
        
        in_bounds = 0 <= i < m and 0 <= j < n
        if not in_bounds or grid[i][j] == 0:
            return 1
        
        if grid[i][j] == '#':
            return 0
        
        grid[i][j] = '#'
        
        perimeter = 0
        for x, y in [(1,0), (0,1), (-1,0), (0,-1)]:
            perimeter += self.dfs(grid, i+x, j+y, m, n)
        return perimeter
