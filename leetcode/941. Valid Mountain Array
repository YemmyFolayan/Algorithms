class Solution:
# single pass
    def validMountainArray(self, A: List[int]) -> bool:
           
        max, size = None, len(A)
        if size < 3: return False
        
        for i in range(1, size):
            
            prev, curr = A[i - 1], A[i]
            if prev == curr: return False
            
            if max == None:
                if prev > curr: 
                    if i != 1: max = prev
                    else: return False
            else:
                if prev < curr: return False
        
        return max != None

# two pointer
    def validMountainArray(self, A: List[int]) -> bool:
        
        size = len(A)
        if size < 3: return False
        
        l, r = 0, size - 1
        while l < r:
            if A[l] == A[l+1] or A[r-1] == A[r]: return False
            if A[l] > A[l+1] and A[r-1] < A[r]: return False
            if A[l] < A[l+1]: l += 1
            if A[r-1] > A[r]: r -=1
            
        return l != 0 and r != size - 1
