# insert+remove O(1) - getRandom O(n) / O(n)
class RandomizedSet:

    def __init__(self):
        self.map = {}

    def insert(self, val: int) -> bool:
        if val in self.map:
            return False
        
        self.map[val] = True
        return True
        

    def remove(self, val: int) -> bool:
        if val in self.map:
            del self.map[val]
            return True
        
        return False
        
    def getRandom(self) -> int:
        keys = list(self.map.keys())
        return keys[random.randint(0, len(keys)-1)]

# O(1) / O(n)
class RandomizedSet:

    def __init__(self):
        self.map = {}
        self.list = []

    def insert(self, val: int) -> bool:
        if val in self.map:
            return False
        
        self.map[val] = len(self.list)
        self.list.append(val)
        return True
        

    def remove(self, val: int) -> bool:
        if val not in self.map:
            return False

        last_elm = self.list[-1]
        del_idx = self.map[val]  
        
        self.list[del_idx] = last_elm
        self.map[last_elm] = del_idx
        
        self.list.pop()
        del self.map[val]
        
        return True
        
    def getRandom(self) -> int:
        return choice(self.list)
