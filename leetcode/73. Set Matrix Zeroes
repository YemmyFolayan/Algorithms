# O(m*n) / O(m+n)
class Solution:
    def setZeroes(self, matrix: List[List[int]]) -> None:
        
        if not len(matrix):
            return
        
        m, n = len(matrix), len(matrix[0])
        zeroRow, zeroCol = set(), set()
        
        for i in range(m):
            for j in range(n):
                if matrix[i][j] == 0:
                    zeroRow.add(i)
                    zeroCol.add(j)
        
        for i in range(m):
            
            if i in zeroRow:
                matrix[i] = [0]*n
                continue 
            
            for j in range(n):
                if j in zeroCol:
                    matrix[i][j] = 0

# O(m, n) / O(1)
class Solution:
    def setZeroes(self, matrix: List[List[int]]) -> None:

        first_col_zero = False
        
        for i in range(len(matrix)):
            
            if matrix[i][0] == 0:
                first_col_zero = True
            
            for j in range(1, len(matrix[0])):
                if matrix[i][j] == 0:
                    matrix[0][j] = 0
                    matrix[i][0] = 0
                    
        for i in range(1, len(matrix)):
            for j in range(1, len(matrix[0])):
                
                if matrix[0][j] == 0 or matrix[i][0] == 0:
                    matrix[i][j] = 0
                    
        if matrix[0][0] == 0:
            matrix[0] = [0]*len(matrix[0])
                    
        if first_col_zero:
            for i in range(len(matrix)):
                matrix[i][0] = 0
