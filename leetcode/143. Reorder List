# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def reverse(self, head):
        cur = head
        prev = None
        
        while cur:
            next = cur.next
            cur.next = prev
            prev = cur
            cur = next
        
        return prev
            
        
    def reorderList(self, head: ListNode) -> None:
        if not head: return None
        
        slow, fast = head, head
        
        while fast and fast.next:
            slow = slow.next
            fast = fast.next.next

        h1 = head
        h2 = self.reverse(slow.next)
        slow.next = None
        
        ordered = ListNode(0)
        
        while h1 or h2:
            if h1:
                ordered.next = h1
                ordered = ordered.next
                h1 = h1.next
            
            if h2:
                ordered.next = h2
                ordered = ordered.next
                h2 = h2.next
                
        return ordered.next
                
