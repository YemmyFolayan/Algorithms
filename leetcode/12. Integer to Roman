# O(1) / O(1)
class Solution:
    def intToRoman(self, num: int) -> str:
    
        chars = [('I', 1), ('IV', 4), ('V', 5), ('IX', 9), ('X', 10), ('XL', 40), ('L', 50), ('XC', 90), ('C', 100), ('CD', 400), ('D', 500), ('CM', 900), ('M', 1000)]
        
        nums_left = num
        sol = []
        
        while nums_left != 0:
            if chars[-1][1] > nums_left:
                chars.pop()
                continue
                
            char, num = chars[-1]
            nums_left-=num
            sol.append(char)
            
        return ''.join(sol)

# O(1) / O(1)
class Solution:
    def intToRoman(self, num: int) -> str:
    
        chars = [('I', 1), ('IV', 4), ('V', 5), ('IX', 9), ('X', 10), ('XL', 40), ('L', 50), ('XC', 90), ('C', 100), ('CD', 400), ('D', 500), ('CM', 900), ('M', 1000)]
        
        sol = []
        
        for i in range(len(chars)-1, -1, -1):
            char, val = chars[i]
            char_count, num = divmod(num, val)
            sol.append(char*char_count)
            
        return ''.join(sol)
