# Sliding window - O(|s| + |t|) 
class Solution:
    def minWindow(self, s: str, t: str) -> str:
        if not s or not t: return ""
        count, size = Counter(t), len(s)
        l, r, ans, soln = 0, 0, (size, None, None), len(count)
        while r < size:
            char = s[r]
            if char in count: 
                count[char]-=1
                if count[char] == 0: soln-=1
            while soln == 0:
                if r-l < ans[0]: ans = (r-l, l, r)
                char = s[l]
                if char in count: 
                    count[char]+=1
                    if count[char] == 1: soln+=1
                l+=1
            r+=1
        return s[ans[1]:ans[2]+1] if ans[0] != size else ""
        
class Solution:
    def minWindow(self, s: str, t: str) -> str:
        min_ans, ans = float('inf'), ""
        count = Counter(t)
        ut = len(count)
        r, l = 0, 0 
        while r < len(s):
            cr = s[r]
            r+=1
            if cr in count:
                count[cr]+=-1
                if count[cr] == 0:
                    ut+=-1
            while ut == 0:
                if r-l < min_ans:
                    min_ans, ans = r-l, s[l:r]
                cl = s[l]
                l+=1
                if cl in count:
                    count[cl]+=1
                    if count[cl] > 0:
                        ut+=1
        return ans
