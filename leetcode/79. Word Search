# O(N * W) / O(W)
class Solution:
    def exist(self, board: List[List[str]], word: str) -> bool:

        m, n = len(board), len(board[0])
        
        for i in range(m):
            for j in range(n):
                if self.dfs(i, j, m, n, board, word):
                    return True
                
        return False
        
    def dfs(self, i, j, m, n, board, word):
        
        if not word: 
            return True
        
        in_bounds = 0 <= i < m and 0 <= j < n
        if not in_bounds or word[0] != board[i][j]:
            return False
        
        board[i][j] = '#'
        
        for x, y in [(0,1),(1,0),(-1,0),(0,-1)]:
            if self.dfs(i+x, j+y, m, n, board, word[1:]):
                return True
            
        board[i][j] = word[0]
        return False
